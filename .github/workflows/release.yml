name: Build and Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  dist:
    name: "Build distribution release."
    runs-on: ubuntu-latest

    steps:
      - name: "Checks out the repository."
        uses: "actions/checkout@v2"

      - name: "Setup NodeJS."
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Ensure you are using the Node.js version required by your project

      - name: "Install NPM dependencies."
        run: npm install

      - name: "Build release: Stable"
        run: npm run build

      - name: "Remove files based on .distignore"
        run: |
          if [ -f .distignore ]; then
            cat .distignore | xargs rm -rf
          else
            echo ".distignore file not found."

      - name: "Create a Release Archive"
        run: |
          zip -r dblocks-codepro.zip .
          ls -l  # Lists files to verify zip creation

      - name: "Create a GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: dblocks-codepro.zip
        env:
          GITHUB_TOKEN: ${{ secrets.WPSCIPTSTOKEN }}

  deploy:
    needs: dist
    runs-on: ubuntu-latest
    steps:
      - name: "Setup GitHub CLI"
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: "Download Release Archive"
        run: |
          gh release download --repo DBlocks-by-DPlugins/dblocks-codepro--dev --pattern "dblocks-codepro.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.WPSCIPTSTOKEN }}  # Ensure this token has the right permissions to access the releases

      - name: "Checkout Public Repository"
        uses: actions/checkout@v2
        with:
          repository: 'DBlocks-by-DPlugins/dblocks-codepro'
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          path: 'public-repo'

      - name: "Unzip Archive in Public Repo"
        run: |
          unzip dblocks-codepro.zip -d public-repo/
          cd public-repo
          ls -la  # List files to confirm unzip was successful

      - name: "Commit and Push Changes"
        run: |
          cd public-repo
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add .
          git commit -m "Deployed new public release"
          git push

      - name: "Create Public GitHub Release"
        uses: softprops/action-gh-release@v1
        with:
          files: dblocks-codepro.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
